name: Deploy Telethon

on: 
  schedule:
    - cron: '*/30 * * * *'  # 每 30 分钟运行一次
  push: 
    branches: 
      - master 
  workflow_dispatch: # 添加这一行以支持手动触发

jobs:
  run-telethon-bot:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Decrypt Telethon session file
      env:
        API_ID: ${{ secrets.API_ID }}
        SESSION_PASSWORD: ${{ secrets.SESSION_PASSWORD }}
      run: |
        openssl aes-256-cbc -d -pbkdf2 -in "${{ secrets.API_ID }}session_name.session.enc" -out "${{ secrets.API_ID }}session_name.session" -pass pass:"${{ secrets.SESSION_PASSWORD }}"


    - name: Run GitHub Script
      uses: actions/github-script@v6
      with:
        script: |
          try {
            const { data: repo } = await github.repos.get({
              owner: context.repo.owner,
              repo: context.repo.repo
            })
            console.log(repo)
          } catch (error) {
            console.error('Error fetching repository:', error)
            throw error  // Rethrow to fail the step
          }
            
    - name: Get previous workflow run ID
      uses: actions/github-script@v6
      id: get-previous-run-id
      with:
        script: |
          const runs = await github.rest.actions.listWorkflowRuns({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: context.workflow,
            per_page: 2, // Fetch the two most recent runs
            status: 'success',
          });
          if (runs.data.workflow_runs.length > 1) {
            core.setOutput('run_id', runs.data.workflow_runs[1].id); // Previous successful run
          } else {
            core.setFailed('No previous successful workflow run found');
          }

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: last_read_message
        path: .
        run-id: ${{ steps.get-previous-run-id.outputs.run_id }}
      continue-on-error: true

    - name: Display structure of downloaded files
      run: ls -R

    - name: Check for last_read_message_id.json
      run: |
        if [ -f last_read_message_id.json ]; then
          echo "last_read_message_id.json exists."
        else
          echo "last_read_message_id.json does not exist."
        fi      

    - name: Run Telethon script
      env:
        API_ID: ${{ secrets.API_ID }}
        API_HASH: ${{ secrets.API_HASH }}
        PHONE_NUMBER: ${{ secrets.PHONE_NUMBER }}
        WORK_BOT_ID: ${{ secrets.WORK_BOT_ID }}
        WORK_CHAT_ID: ${{ secrets.WORK_CHAT_ID }}
        PUBLIC_BOT_ID: ${{ secrets.PUBLIC_BOT_ID }}
        WAREHOUSE_CHAT_ID: ${{ secrets.WAREHOUSE_CHAT_ID }}
        LINK_CHAT_ID: ${{ secrets.LINK_CHAT_ID }}
      run: |
        python go.py

    - name: Check if last_read_message_id.json was created
      run: |
        if [ -f last_read_message_id.json ]; then
          echo "last_read_message_id.json was created."
        else
          echo "last_read_message_id.json was not created."
        fi

    - name: Upload last_read_message_id.json artifact
      uses: actions/upload-artifact@v4
      with:
        name: last_read_message
        path: last_read_message_id.json

    # 删除上一个工作流运行日志的步骤
    - name: Delete Previous Workflow Run Log
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        run_ids=$(gh run list --workflow ${{ github.workflow }} --limit 2 --json databaseId --jq '.[].databaseId')

        # 将运行 ID 转换为数组
        run_id_array=($run_ids)

        # 获取第二个 ID，即上一个运行
        previous_run_id=${run_id_array[1]}

        # 删除上一个工作流运行日志
        if [ -n "$previous_run_id" ]; then
          echo "Deleting previous run ID: $previous_run_id"
          gh run delete $previous_run_id --confirm
        else
          echo "No previous run found to delete."
        fi
